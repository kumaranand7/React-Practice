{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mobil\\\\Desktop\\\\Practic React\\\\my-app\\\\src\\\\Components\\\\FetchApi2.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction FetchApi2() {\n  _s();\n  const [names, setNames] = useState([]); // Initialize as an empty array\n  const [avatarUrl, setAvtarUrl] = useState([]);\n  console.log(names);\n\n  // Function Declaration\n  async function fetchApiMethod() {\n    try {\n      const response = await axios.get(\"https://reqres.in/api/users?page=2\");\n      const arrayElement = response.data.data;\n      // Update state with the full array of names\n\n      setNames(arrayElement.map(element => element.first_name));\n      setAvtarUrl(arrayElement.map(element => element.avatar));\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  }\n  useEffect(() => {\n    fetchApiMethod();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Fetch API 2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: names.map(element => /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [element, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: avatarUrl.map(element => /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [element, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(FetchApi2, \"xQxbMnaRf4hZMr0/eiGX+Ow+M98=\");\n_c = FetchApi2;\nexport default FetchApi2;\nvar _c;\n$RefreshReg$(_c, \"FetchApi2\");","map":{"version":3,"names":["useEffect","useState","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","FetchApi2","_s","names","setNames","avatarUrl","setAvtarUrl","console","log","fetchApiMethod","response","get","arrayElement","data","map","element","first_name","avatar","error","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/mobil/Desktop/Practic React/my-app/src/Components/FetchApi2.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport axios from 'axios';\r\n\r\nfunction FetchApi2() {\r\n    const [names, setNames] = useState([]); // Initialize as an empty array\r\n    const [avatarUrl,setAvtarUrl] =useState([]);\r\n    console.log(names);\r\n\r\n\r\n    // Function Declaration\r\n    async function fetchApiMethod() {\r\n        try {\r\n            const response = await axios.get(\"https://reqres.in/api/users?page=2\");\r\n            const arrayElement = response.data.data;\r\n            // Update state with the full array of names\r\n            \r\n            setNames(arrayElement.map((element) => element.first_name));\r\n            setAvtarUrl(arrayElement.map((element)=>element.avatar));\r\n        } catch (error) {\r\n            console.error(\"Error fetching data:\", error);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchApiMethod();\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <p>Fetch API 2</p>\r\n            <p>\r\n                {names.map((element) => (\r\n                    <span>{element} </span>\r\n                ))}\r\n            </p>\r\n\r\n            <p>\r\n                {avatarUrl.map((element) => (\r\n                    <span>{element} </span>\r\n                ))}\r\n            </p>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default FetchApi2;\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE1B,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACxC,MAAM,CAACU,SAAS,EAACC,WAAW,CAAC,GAAEX,QAAQ,CAAC,EAAE,CAAC;EAC3CY,OAAO,CAACC,GAAG,CAACL,KAAK,CAAC;;EAGlB;EACA,eAAeM,cAAcA,CAAA,EAAG;IAC5B,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMd,KAAK,CAACe,GAAG,CAAC,oCAAoC,CAAC;MACtE,MAAMC,YAAY,GAAGF,QAAQ,CAACG,IAAI,CAACA,IAAI;MACvC;;MAEAT,QAAQ,CAACQ,YAAY,CAACE,GAAG,CAAEC,OAAO,IAAKA,OAAO,CAACC,UAAU,CAAC,CAAC;MAC3DV,WAAW,CAACM,YAAY,CAACE,GAAG,CAAEC,OAAO,IAAGA,OAAO,CAACE,MAAM,CAAC,CAAC;IAC5D,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZX,OAAO,CAACW,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAChD;EACJ;EAEAxB,SAAS,CAAC,MAAM;IACZe,cAAc,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIX,OAAA,CAAAE,SAAA;IAAAmB,QAAA,gBACIrB,OAAA;MAAAqB,QAAA,EAAG;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAClBzB,OAAA;MAAAqB,QAAA,EACKhB,KAAK,CAACW,GAAG,CAAEC,OAAO,iBACfjB,OAAA;QAAAqB,QAAA,GAAOJ,OAAO,EAAC,GAAC;MAAA;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CACzB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAEJzB,OAAA;MAAAqB,QAAA,EACKd,SAAS,CAACS,GAAG,CAAEC,OAAO,iBACnBjB,OAAA;QAAAqB,QAAA,GAAOJ,OAAO,EAAC,GAAC;MAAA;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CACzB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA,eACN,CAAC;AAEX;AAACrB,EAAA,CAxCQD,SAAS;AAAAuB,EAAA,GAATvB,SAAS;AA0ClB,eAAeA,SAAS;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}